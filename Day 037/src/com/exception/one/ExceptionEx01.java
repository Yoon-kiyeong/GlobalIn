package com.exception.one;

/*
 * 예외처리
 * 1. 프로그램 오류
 * 	- 프로그램이 실행 중 어떤 원인에 의해서 오작동을 하거나 비정상적으로 종료되는 경우를 의미함
 *  - 컴파일 에러 : 컴파일 시 발생하는 에러 (javac.exe에서 전부 검사를 함)
 *  - 런타임 에러 : 실행하는 도중에 발생하는 에러
 *  - 컴파일러는 문법적인 오류만을 인식한다
 *  
 *  - 자바에서는 런타임 에러를 에러(Error)와 예외(Exception)로 구분한다.
 * 	1. 에러 : 프로그램 코드를 수정하여 에러를 처리할 수 있는 오류
 *  2. 오류(Error)  : 프로그램 코드에 의해서도 처리할 수 없는 심각한 오류
 *  
 *  예외가 발생하는 상황
 *  1. 정수를 0으로 나눈 경우
 *  2. 배열의 인덱스 값이 음수값을 가지거나, 크기를 벗어나는 경우
 *  3. 형변환이 적절하지 못한 경우
 *  4. 입출력시 발생할 수 있는 인터럽트
 *  5. 입출력하기 위한 파일이 존재하지 않는 경우
 *  
 *  예외의 목적
 *  - 예외의 발생으로 인한 실행 중인 프로그램의 갑작스런 비정상적인 종료를 막고, 정상적인 실행상태를 유지할 수 있도록 하는 것을 의미함
 *	
 *	예외가 발생했을 경우 처리하는 구문
 *  - try {
 *  	예외가 발생할 가능성이 있는 코드를 기술함
 *    } catch(예외타입 매개변수) {
 *    	예외가 발생했을 경우 처리할 수 있는 코드가 기술됨
 *    }	finally {
 *    	예외가 발생했을 경우와 발생하지 않았을 경우 모두 실행되는 코드를 기술함
 *	  }
 */

public class ExceptionEx01 {
	public static void main(String[] args) {
		int number = 50; 
		int result = 0;		//결과를 저장하는 변수
		
		for(int i = 0; i < 10; i++) {
			try {
				result = number / (int)(Math.random()* 5);
				System.out.println(result);
			} catch(ArithmeticException ae) {	//예외가 발생했을 경우 처리하는 코드
				System.out.println("0으로 나눌 수 없습니다");
			}
		}
	}
}
