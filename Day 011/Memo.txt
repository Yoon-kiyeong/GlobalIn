자바스크립트 언어
JavaScript
    - 1995년 넷스케이프 개발
    - Netscape Navigator 2.0 브라우저에 최초 탑재
    - 웹 프로그래밍 개념 창시

특징
    - HTML 문서에 내장
        - 조각 소스 코드
    - 스크립트 언어
        - 인터프리터 실행
        - 컴파일 필요 없음
    - 단순
        - C언어 구조 차용
        - 배우기 쉬움

웹 페이지에서 자바스크립트의 역할
    - 사용자의 입력 및 계산
        - 마우스와 키보드 입력은 오직 자바스크립트로만 가능
        - 계산 기능
    - 웹 페이지 내용 및 모양의 동적 제어
        - HTML 태그의 속성 콘텐츠, CSS 프로퍼티 값 동적 변경
    - 브라우저 제어
        - 브라우저 윈도우 크기와 모양 제어
        - 새 윈도우 열기/닫기
        - 다른 웹 사이트 접속
        - 히스토리 제어
    - 웹 서버와의 통신
    - 웹 어플리케이션 

자바스크립트 코드의 위치
    - 자바스크립트 코드 작성이 가능한 위치
        1. HTML 태그의 이벤트 리스너 속성에 작성
        2. <script></script> 태그에 작성
        3. 자바스크립트 파일에 작성
        4. URL 부분에 작성

<script></script> 태그에 자바스크립트 작성
- 특징
    - <head></head>나 <body></body> 내 어디든 가능
    - 웹 페이지 내에 여러 번 삽입 가능

자바스크립트 코드를 별도 파일에 작성
    - 자바스크립트 코드 파일 저장
        - 확장자 .js 파일에 저장
        - <script> 태그 없이 자바스크립트 코드만 저장
    - 여러 웹 페이지에서 불러 사용
        - 웹 페이지마자 자바스클비트 코드 작성 중복 불필요
        - <script> 태그의 src 속성으로 파일을 불러 사용

자바스크립트 다이얼로그 : 프롬프트 다이얼로그
    - prompt("메시지", "디폴트 입력값") 함수
        - 사용자로부터 문자열을 입력 받아 리턴

자바스크립트 식별자
    식별자
        - 자바스클비트 프로그램의 변수, 상수(리터럴), 함수의 이름
        - 식별자 만드는 규칙
        - 첫 번째 문자 : 알파벳(A-Z,a-z), 언더스코어(_), $ 문자만 사용 가능
        - 두 번째 이상 문자 : 알파벳, 언더스코어(_), 0-9, $ 사용 가능
        - 대소문자는 구분되어 다루어짐
        - 자바스크릡트 예약어 사용 불가

자바스크립트 문장
    - 문장
        - 자바스크립트 프로그램의 기본 단위는
        - 문장과 문장을 구분하기 위해 세미콜론(;) 사용

데이터 타입
    - 자바스크립트 언어에서 다루는 데이터 종류
        - 숫자 타입 : 정수, 실수
        - 논리 타입 : 참, 거짓
        - 문자열 타입
        - 객체 레퍼런스 타입 : 객체를 가리킴
        - null : 값이 없음을 표시하는 특수 키워드. Null, NULL과는 다름
    - 특징
        - 자바스크릡트에는 문자 타입 없음. 문자열로 표현

변수
    - 변수 : 자바스크릡트 데이터 저장 공간
        - 변수 선언 : 변수 이름을 정하고, 저장 공간 할당
            - var 키워드로 선언하는 방법
            - var 없이 선언
        - 자바스크릡트에는 변수 타입 없음
            - 변수 타입 선언하지 않음
            - 변수에 저장되는 값에 대한 제약 없음

지역변수와 전역 변수
지역변수
- 함수 내에 var 키워드로 선언
- 선언된 함수 내에서만 사용자로부터

전역변수
- 함수 밖에 선언되거나, 함수 내에 var 키워드 없이 선언된 변수
- 프로그램 전역에서 사용        

this로 전역변수 접근
    - 지역 변수와 전역 변수의 이름이 같을 때
        - 전역 변수에 접근하고자 할 때 : this.전역변수







